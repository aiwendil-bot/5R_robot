// ibexsolve 5R_pavage.mbx -e0.2 -E0.6
// premiÃ¨re version sans les contraintes de singularitÃ©s. Nous ne l'avons pas utilisÃ© pour nos tests

constants

    // calibrated architecture parameters
    a1 = -22.49629368;
    a2 = 0.09502097;
    a3 = 22.40372736;
    a4 = 0.05769971;
    l1 = 17.99095831;
    l2 = 18.11306611;
    l3 = 17.889752;
    l4 = 17.61103216;



variables 

    // pose parameters (grosso modo l'espace atteignable par le robot)
     
    x1 in [-15,15];
    x2 in [-30,30];
    
    // command parameters
    q1 in [-pi,pi];
    q2 in [0,2*pi];

constraints

    // kinematic equations
    -l2^2 + (-a1 + x1 - l1*cos(q1))^2 + (x2 - l1*sin(q1) -a2)^2 = 0;
    -l4^2 + (-a3 + x1 - l3*cos(q2))^2 + (x2 - l3*sin(q2) -a4)^2 = 0;

    
    // Ã©quations pour respecter les obstacles
    
    (x1 + 12)^2 + (x2 + 6)^2 > 1.5^2 ;
    (x1 + 12)^2 + (x2 - 0)^2 > 1.1^2 ;
    (x1 + 12)^2 + (x2 - 6)^2 > 1.8^2 ;
    (x1 + 6)^2 + (x2 + 18)^2 > 2.8^2 ;
    (x1 + 6)^2 + (x2 + 12)^2 > 2.9^2 ;
    (x1 + 6)^2 + (x2 + 6)^2 > 0.6^2 ;
    (x1 + 6)^2 + (x2 - 0)^2 > 1.6^2 ;
    (x1 + 6)^2 + (x2 - 6)^2 > 0.4^2 ;
    (x1 + 6)^2 + (x2 - 12)^2 > 1.9^2 ;
    (x1 + 6)^2 + (x2 - 18)^2 > 0.4^2 ;
    (x1 - 0)^2 + (x2 + 24)^2 > 2.4^2 ;
    (x1 - 0)^2 + (x2 + 12)^2 > 1.9^2 ;
    (x1 - 0)^2 + (x2 + 6)^2 > 0.5^2 ;
    (x1 - 0)^2 + (x2 - 0)^2 > 1.8^2 ;
    (x1 - 0)^2 + (x2 - 6)^2 > 2.9^2 ;
    (x1 - 0)^2 + (x2 - 12)^2 > 1.7^2 ;
    (x1 - 0)^2 + (x2 - 24)^2 > 0.5^2 ;
    (x1 - 6)^2 + (x2 + 18)^2 > 1.9^2 ;
    (x1 - 6)^2 + (x2 + 12)^2 > 2.8^2 ;
    (x1 - 6)^2 + (x2 + 6)^2 > 0.4^2 ;
    (x1 - 6)^2 + (x2 - 0)^2 > 1.9^2 ;
    (x1 - 6)^2 + (x2 - 6)^2 > 0.3^2 ;
    (x1 - 6)^2 + (x2 - 12)^2 > 2.3^2 ;
    (x1 - 6)^2 + (x2 - 18)^2 > 1.2^2 ;
    (x1 - 12)^2 + (x2 + 6)^2 > 2.8^2 ;
    (x1 - 12)^2 + (x2 - 0)^2 > 1.3^2 ;
    (x1 - 12)^2 + (x2 - 6)^2 > 2.1^2 ;

end
